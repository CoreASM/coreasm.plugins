CoreASM ParserTest

use Standard
use AopASM

init TestCallPointcut

rule Start = skip

aspect ParserTest {

	derived a = 3
	
	rule asd = skip

	pointcut call_Test_1(rname, p1, p2) : call("RuleName.*" as rname, "par1" as p1, string_in_x as p2) and call("DifferentRule.*")
	
	pointcut call_Test_2 : call("RuleName.*", "par1", string_in_x)
	
	pointcut call_Test_3(rname) : call("RuleName.*" as rname, "par1", string_in_x) by agent with result
	
	pointcut call_sdasd : call("as")
	
	pointcut call_Test_4 : callsdasd(asd) or call("ass")
		
	advice adviceName(rname) before : call_Test_3(rname) and call_Test8as(asd) or asdcas {
		print "Hallo"
	}
	
	advice Test before : call("MyMacroCallRule" as x) {
		print "Hallo"
	}

}

rule test =
	MyMacroCallRule(asdas)
	

rule MyMacroCallRule(a) =
	print a

rule TestCallPointcut =
	MyMacroCallRule(4)